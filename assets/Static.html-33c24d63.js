import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,e as i}from"./app-4a92f86a.js";const d={},s=i(`<h1 id="项目文档" tabindex="-1"><a class="header-anchor" href="#项目文档" aria-hidden="true">#</a> 项目文档</h1><h2 id="必要环境" tabindex="-1"><a class="header-anchor" href="#必要环境" aria-hidden="true">#</a> 必要环境</h2><p>确保您的系统满足以下环境要求：</p><ul><li>Node.js 版本大于 16</li><li>pnpm 版本大于 6</li><li>MySQL 版本大于等于 5.7</li><li>Redis</li></ul><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>project-root
|-- chat           # 用户端代码
|-- admin          # 管理端代码
|-- service        # 服务端代码
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="本地开发" tabindex="-1"><a class="header-anchor" href="#本地开发" aria-hidden="true">#</a> 本地开发</h2><p>在项目根目录执行以下命令进行本地开发：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装依赖</span>
<span class="token function">pnpm</span> <span class="token function">install</span>

<span class="token comment"># 启动项目</span>
<span class="token function">pnpm</span> dev

<span class="token comment"># 打包项目</span>
<span class="token function">pnpm</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目" aria-hidden="true">#</a> 启动项目</h3><p>分别安装依赖并启动项目：</p><ol><li>进入 <code>service</code> 目录，创建 <code>.env</code> 文件，并修改测试数据库信息和 Redis 配置。完成后执行：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i
<span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：ORM映射会自动创建数据库。</p></blockquote><ol start="2"><li>进入 <code>chat</code> 目录，执行以下命令启动用户端：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i
<span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>进入 <code>admin</code> 目录，执行以下命令启动管理端：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> i
<span class="token function">pnpm</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关于授权" tabindex="-1"><a class="header-anchor" href="#关于授权" aria-hidden="true">#</a> 关于授权</h3><p>授权模块位于 <code>src/modules/globalConfig/globalConfig.service.ts</code> 文件下。如果要移除授权，请清空 <code>nineAiCheckAuth</code> 函数内容，并移除 <code>onModuleInit</code> 中的 <code>nineAiCheckAuth</code>。</p><p>对应的定时任务也可以移除，位于 <code>src/modules/task/task.service.ts</code> 文件中的 <code>checkauth</code> 定时任务。</p><h3 id="打包路径问题" tabindex="-1"><a class="header-anchor" href="#打包路径问题" aria-hidden="true">#</a> 打包路径问题</h3><h4 id="后端服务" tabindex="-1"><a class="header-anchor" href="#后端服务" aria-hidden="true">#</a> 后端服务</h4><p>后端服务只需执行以下命令即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>生成七个文件，其中 <code>.env</code> 是环境变量文件，需要在后续部署时自行挂载或创建。项目提供示例文件 <code>.env.example</code>。</p><h4 id="chat-前端项目" tabindex="-1"><a class="header-anchor" href="#chat-前端项目" aria-hidden="true">#</a> chat（前端项目）</h4><p>前端项目打包使用配置文件 <code>.env.production</code>，与 <code>admin</code> 相同。修改文件中的变量即可，如果分开部署，请填写线上后端服务地址。</p><h4 id="admin-管理端" tabindex="-1"><a class="header-anchor" href="#admin-管理端" aria-hidden="true">#</a> admin（管理端）</h4><p>管理端与 chat 部署方式相同，修改 <code>.env.production</code> 中的配置即可。分离部署时，只需替换线上地址，其余配置暂时用不到。</p><h3 id="其他文件" tabindex="-1"><a class="header-anchor" href="#其他文件" aria-hidden="true">#</a> 其他文件</h3><h4 id="刷新404问题" tabindex="-1"><a class="header-anchor" href="#刷新404问题" aria-hidden="true">#</a> 刷新404问题</h4><p>前端在刷新时可能会出现404问题，需要对 Nginx 进行配置。请参考相关文档进行配置。</p>`,33),c=[s];function l(r,o){return a(),n("div",null,c)}const p=e(d,[["render",l],["__file","Static.html.vue"]]);export{p as default};
